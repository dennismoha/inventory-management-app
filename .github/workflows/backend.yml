name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - deployment-setup  # Trigger deployment on changes to the main branch
    paths:
      - "backend/**"  # Only trigger if files in the backend folder are changed

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' # or your desired version

      - name: Install dependencies
        run: npm install

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint check
        run: npm run lint:check

      - name: Run Prettier check
        run: npm run prettier:check

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

  migrate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run migration (production)
        run: npm run migrate:prod
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test # You can adjust this if you're using a testing framework like Jest or Mocha

  deploy:
    runs-on: ubuntu-latest
    needs: migrate
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Deploy to production (optional)
        run: |
          echo "Deploying to production..."
          # Add your deployment script/command here (e.g., Heroku, AWS, etc.)
        # env:
        #   NODE_ENV: production








  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'  # Set the Node.js version required for the backend

  #     - name: Install dependencies
  #       working-directory: ./backend
  #       run: npm install

  #     - name: Run ESLint check
  #       working-directory: ./backend
  #       run: npm run lint:check  # Lint the backend code

  #     - name: Run Prettier check
  #       working-directory: ./backend
  #       run: npm run prettier:check  # Prettier check

  # build_and_migrate:
  #   runs-on: ubuntu-latest
  #   needs: lint  # Ensure linting happens before build & migration

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'

  #     - name: Install dependencies
  #       working-directory: ./backend
  #       run: npm install

  #     - name: Build project
  #       working-directory: ./backend
  #       run: npm run build  # Build the backend code

  #     - name: Run Database Migrations (Production)
  #       working-directory: ./backend
  #       run: npm run migrate:prod  # Run production migrations using Prisma

  #     - name: Generate Documentation (optional)
  #       working-directory: ./backend
  #       run: npm run generate-docs  # Optional: Generate docs if needed

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_migrate  # Deploy after build and migrations

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'

  #     - name: Install dependencies
  #       working-directory: ./backend
  #       run: npm install

  #     - name: build
  #       run : npm run build

  #     - name: run build
  #       run: echo "Deploying..."
            
